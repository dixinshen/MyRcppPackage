library(MyRcppPackage)
source("~/test.R", echo=TRUE)
?OLS_Rcpp
class(beta_OLS_v1)
class(beta_Rcpp)
source("~/OLS_R.R", echo=TRUE)
MASS::data(Boston)
library(MASS)
data(Boston)
dim(Boston)
head(Boston)
X <- model.matrix(~ ., data = subset(Boston, select=-medv))
y <- Boston$medv
beta_lm <- lm(medv ~ ., data = Boston)$coefficients
beta_lmfit <- lm.fit(X, y)$coefficients
beta_OLS_v1 <- OLS_v1(X, y)
beta_OLS_v2 <- OLS_v1(X, y)
cbind(beta_lm, beta_lmfit, beta_OLS_v1, beta_OLS_v2)
class(beta_lm)
class(beta_lmfit)
class(beta_OLS_v1)
library(myRpackageCmd)
remove.packages("myRpackageCmd")
source("~/test.R", echo=TRUE)
?OLS_Rcpp
?OLS_v1
detach("package:MASS", unload = TRUE)
detach("package:MyRcppPackage", unload = TRUE)
library(MyRcppPackage)
library(MASS)
install.packages(c("cli", "highr", "isoband", "purrr", "xfun"))
library(testthat)
test_check("MyRcppPackage")
testthat::use_testthat(3)
?testthat::use_catch
?usethis::use_testthat
usethis::use_testthat()
library(MyRcppPackage)
devtools::test()
library(MASS)
library(MyRcppPackage)
data(Boston)
dim(Boston)
head(Boston)
X <- model.matrix(~ ., data = subset(Boston, select=-medv))
y <- Boston$medv
beta_lm <- lm(medv ~ ., data = Boston)$coefficients
beta_OLS_v1 <- OLS_v1(X, y)
beta_OLS_v2 <- OLS_v1(X, y)
beta_Rcpp <- OLS_Rcpp(X, y)
cbind(beta_lm, beta_OLS_v1, beta_OLS_v2, beta_Rcpp)
beta_OLS_v1==beta_OLS_v2
beta_OLS_v1==beta_Rcpp
beta_lm==beta_Rcpp
round(beta_lm, 7) == round(beta_OLS_v1, 7)
round(beta_lm, 10) == round(beta_OLS_v1, 10)
round(beta_lm, 10) == round(beta_OLS_v2, 10)
round(beta_lm, 10) == round(beta_Rcpp, 10)
all(round(beta_lm, 10) == round(beta_OLS_v1, 10))
?all
any(round(beta_lm, 10) == round(beta_OLS_v1, 10))
library(MyRcppPackage)
detach("package:MyRcppPackage", unload = TRUE)
library(MyRcppPackage)
devtools::test()
library(MyRcppPackage)
devtools::test()
